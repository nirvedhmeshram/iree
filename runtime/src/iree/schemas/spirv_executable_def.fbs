// Copyright 2019 The IREE Authors
//
// Licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

namespace iree.hal.spirv;

// 'SPIR-V Executable'.
file_identifier "SPVE";
file_extension "spve";

table ShaderModuleDef {
  // SPIR-V code blob.
  code:[uint32];
}

// Source code location denoted by a file name and line within that file.
table FileLineLocDef {
  filename:string;
  line:int32;
}

// Source location keyed by a string compilation stage name.
table StageLocationDef {
  stage:string;
  location:FileLineLocDef;
}

// Table of stage locations sorted in ascending order by stage name.
table StageLocationsDef {
  locations:[StageLocationDef];
}

// An embedded source file referenced by locations in the file.
table SourceFileDef {
  path:string;
  content:[uint8];
}

// A SPIR-V shader module and runtime pipeline layout description.
// This information is used to create the VkShaderModule, VkPipelineLayout, and
// any required VkDescriptorSetLayouts.
table ExecutableDef {
  // A map of entry point ordinals to string names as used in the shader module.
  entry_points:[string];

  // A list of required subgroup sizes for each entry point. 0 means no
  // requirement.
  // This list has the same size as the entry_points list.
  subgroup_sizes:[uint32];

  // A map of entry point ordinals to the indices of the containing shader
  // modules (the following field).
  // This list has the same size as the entry_points list.
  shader_module_indices:[uint32];

  // A list of shader modules hosting various entry points. Each shader module
  // contains at least one entry point.
  // This list may not have the same size as the entry_points list.
  shader_modules:[ShaderModuleDef];

  // A map of entry point ordinals to source locations.
  // This information is optional and may be used by debuggers and profilers to
  // associate executable entry points with the source that generated them.
  source_locations:[FileLineLocDef];

  // Table of source locations per entry point keyed by a string compilation
  // stage name. Sorted ascending by name.
  stage_locations:[StageLocationsDef];

  // Embedded source files sorted ascending by path.
  source_files:[SourceFileDef];
}

root_type ExecutableDef;
